{"version":3,"sources":["../../src/tests/_dbDriver.MsSqlDriver.js"],"names":["dbConfig","user","process","env","META_DB_TEST_USER","password","META_DB_TEST_PW","server","META_DB_TEST_SERVER","database","META_DB_TEST_DB","dataDb","META_DB_TEST_DB_DATA","edmDb","META_DB_TEST_DB_EDM","edmSchema","dataSchema","exports","connect","then","pool","catch","e","connected","close","dbDriver","dispose","getEdmDbAsync","db","fail","message","getDataDbAsync","_verifyEdmTableAsync","getEdmListAsync","edmList","length","getDatabaseForEdmAsync","idb"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,WAAW;AACXC,UAAMC,QAAQC,GAAR,CAAYC,iBADP;AAEXC,cAAUH,QAAQC,GAAR,CAAYG,eAFX;AAGXC,YAAQL,QAAQC,GAAR,CAAYK,mBAHT;AAIXC,cAAUP,QAAQC,GAAR,CAAYO,eAJX;AAKXC,YAAQT,QAAQC,GAAR,CAAYS,oBALT;AAMXC,WAAOX,QAAQC,GAAR,CAAYW,mBANR;AAOXC,eAAW,KAPA;AAQXC,gBAAY;AARD,CAAf;;AAWAC,QAAQ,kCAAR,IAA8C,YAAM;;AAEhD,oBAAMC,OAAN,CAAclB,QAAd,EAAwBmB,IAAxB,CAA6B,UAACC,IAAD,EAAU;AACnC,eAAO,IAAP;AACH,KAFD,EAEGC,KAFH,CAES,UAACC,CAAD,EAAO;AACZ,eAAO,KAAP;AACH,KAJD,EAIGH,IAJH,CAIQ,UAACI,SAAD,EAAe;AACnB,wBAAMC,KAAN;AACA,8BAAOD,SAAP;AACH,KAPD;AASH,CAXD;;AAaAN,QAAQ,wBAAR,IAAoC,YAAM;AACtC,QAAIQ,WAAW,0BAAgBzB,QAAhB,CAAf;AACA,0BAAOyB,QAAP;AACAA,aAASC,OAAT;AACH,CAJD;;AAMAT,QAAQ,oCAAR,IAAgD,YAAM;AAClD,QAAIQ,WAAW,0BAAgBzB,QAAhB,CAAf;AACAyB,aAASE,aAAT,GAAyBR,IAAzB,CAA8B,UAACS,EAAD,EAAQ;AAClC,8BAAOA,EAAP;AACAH,iBAASC,OAAT;AACH,KAHD,EAGGL,KAHH,CAGS,UAACC,CAAD,EAAO;AACZ,yBAAOO,IAAP,CAAYP,EAAEQ,OAAd;AACH,KALD;AAMH,CARD;;AAUAb,QAAQ,qCAAR,IAAiD,YAAM;AACnD,QAAIQ,WAAW,0BAAgBzB,QAAhB,CAAf;AACAyB,aAASM,cAAT,GAA0BZ,IAA1B,CAA+B,UAACS,EAAD,EAAQ;AACnC,8BAAOA,EAAP;AACAH,iBAASC,OAAT;AACH,KAHD,EAGGL,KAHH,CAGS,UAACC,CAAD,EAAO;AACZ,yBAAOO,IAAP,CAAYP,EAAEQ,OAAd;AACH,KALD;AAMH,CARD;;AAUAb,QAAQ,2CAAR,IAAuD,YAAM;AACzD,QAAIQ,WAAW,0BAAgBzB,QAAhB,CAAf;AACAyB,aAASO,oBAAT,GAAgCb,IAAhC,CAAqC,UAACC,IAAD,EAAU;AAC3C,8BAAOA,IAAP;AACAK,iBAASC,OAAT;AACH,KAHD,EAGGL,KAHH,CAGS,UAACC,CAAD,EAAO;AACZ,yBAAOO,IAAP,CAAYP,EAAEQ,OAAd;AACH,KALD;AAMH,CARD;;AAUAb,QAAQ,sCAAR,IAAkD,YAAM;AACpD,QAAIQ,WAAW,0BAAgBzB,QAAhB,CAAf;AACAyB,aAASQ,eAAT,GAA2Bd,IAA3B,CAAgC,UAACe,OAAD,EAAa;AACzC,8BAAO,OAAOA,QAAQC,MAAf,KAA0B,WAAjC;AACAV,iBAASC,OAAT;AACH,KAHD,EAGGL,KAHH,CAGS,UAACC,CAAD,EAAO;AACZ,yBAAOO,IAAP,CAAYP,EAAEQ,OAAd;AACH,KALD;AAMH,CARD;;AAUAb,QAAQ,6CAAR,IAAyD,YAAM;AAC3D,QAAIQ,WAAW,0BAAgBzB,QAAhB,CAAf;AACAyB,aAASW,sBAAT,gBAAqCjB,IAArC,CAA0C,UAACkB,GAAD,EAAS;AAC/C,8BAAOA,GAAP;AACAZ,iBAASC,OAAT;AACH,KAHD,EAGGL,KAHH,CAGS,UAACC,CAAD,EAAO;AACZ,yBAAOO,IAAP,CAAYP,EAAEQ,OAAd;AACH,KALD;AAMH,CARD","file":"_dbDriver.MsSqlDriver.js","sourcesContent":["import assert from \"assert\";\nimport edm from \"../mock/edm\";\nimport mssql from \"mssql\";\nimport MsSqlDriver from \"../dbDriver/MsSqlDriver\";\n\nlet dbConfig = {\n    user: process.env.META_DB_TEST_USER,\n    password: process.env.META_DB_TEST_PW,\n    server: process.env.META_DB_TEST_SERVER,\n    database: process.env.META_DB_TEST_DB,\n    dataDb: process.env.META_DB_TEST_DB_DATA,\n    edmDb: process.env.META_DB_TEST_DB_EDM,\n    edmSchema: \"dbo\",\n    dataSchema: \"dbo\"\n};\n\nexports[\"dbDriver.MsSqlDriver can connect\"] = () => {\n    \n    mssql.connect(dbConfig).then((pool) => {\n        return true;\n    }).catch((e) => {\n        return false;\n    }).then((connected) => {\n        mssql.close();\n        assert(connected);\n    });\n\n};\n\nexports[\"dbDriver.MsSqlDriver()\"] = () => {\n    var dbDriver = new MsSqlDriver(dbConfig);\n    assert(dbDriver);\n    dbDriver.dispose();\n};\n\nexports[\"dbDriver.MsSqlDriver.getEdmDbAsync\"] = () => {\n    var dbDriver = new MsSqlDriver(dbConfig);\n    dbDriver.getEdmDbAsync().then((db) => {\n        assert(db);\n        dbDriver.dispose();\n    }).catch((e) => {\n        assert.fail(e.message);\n    });\n};\n\nexports[\"dbDriver.MsSqlDriver.getDataDbAsync\"] = () => {\n    var dbDriver = new MsSqlDriver(dbConfig);\n    dbDriver.getDataDbAsync().then((db) => {\n        assert(db);\n        dbDriver.dispose();\n    }).catch((e) => {\n        assert.fail(e.message);\n    });\n};\n\nexports[\"dbDriver.MsSqlDriver._verifyEdmTableAsync\"] = () => {\n    var dbDriver = new MsSqlDriver(dbConfig);\n    dbDriver._verifyEdmTableAsync().then((pool) => {\n        assert(pool);\n        dbDriver.dispose();\n    }).catch((e) => {\n        assert.fail(e.message);\n    });\n};\n\nexports[\"dbDriver.MsSqlDriver.getEdmListAsync\"] = () => {\n    var dbDriver = new MsSqlDriver(dbConfig);\n    dbDriver.getEdmListAsync().then((edmList) => {\n        assert(typeof edmList.length !== \"undefined\");\n        dbDriver.dispose();\n    }).catch((e) => {\n        assert.fail(e.message);\n    });\n};\n\nexports[\"dbDriver.MsSqlDriver.getDatabaseForEdmAsync\"] = () => {\n    var dbDriver = new MsSqlDriver(dbConfig);\n    dbDriver.getDatabaseForEdmAsync(edm).then((idb) => {\n        assert(idb);\n        dbDriver.dispose();\n    }).catch((e) => {\n        assert.fail(e.message);\n    });\n};\n\n"]}