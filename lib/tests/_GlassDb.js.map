{"version":3,"sources":["../../src/tests/_GlassDb.js"],"names":["testConfig","user","process","env","META_DB_TEST_USER","password","META_DB_TEST_PW","server","META_DB_TEST_SERVER","database","META_DB_TEST_DB","dataDb","META_DB_TEST_DB_DATA","edmDb","META_DB_TEST_DB_EDM","edmSchema","dataSchema","exports","glass","dispose","addEdmAsync","then","getEdmAsync","edm","name","deleteEdmAsync","noEDM","equal"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAa;AACb,gBAAY;AACR,gBAAQ,OADA;AAER,mBAAW;AACPC,kBAAMC,QAAQC,GAAR,CAAYC,iBADX;AAEPC,sBAAUH,QAAQC,GAAR,CAAYG,eAFf;AAGPC,oBAAQL,QAAQC,GAAR,CAAYK,mBAHb;AAIPC,sBAAUP,QAAQC,GAAR,CAAYO,eAJf;AAKPC,oBAAQT,QAAQC,GAAR,CAAYS,oBALb;AAMPC,mBAAOX,QAAQC,GAAR,CAAYW,mBANZ;AAOPC,uBAAW,KAPJ;AAQPC,wBAAY;AARL;AAFH,KADC;AAcb,kBAAc;AACV,gBAAQ,qBADE;AAEV,mBAAW;AAFD,KAdD;AAkBb,aAAS;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AAPK;AAlBI,CAAjB;;AA6BAC,QAAQ,SAAR,IAAqB,YAAM;AACvB,QAAIC,QAAQ,sBAAYlB,UAAZ,CAAZ;AACA,0BAAOkB,KAAP;AACAA,UAAMC,OAAN;AACH,CAJD;;AAMA;;AAEAF,QAAQ,8BAAR,IAA0C,YAAM;AAC5C,QAAIC,QAAQ,sBAAYlB,UAAZ,CAAZ;AACAkB,UAAME,WAAN,CAAkB,QAAlB,EAA4B,OAA5B,EAAqC,YAArC,EAAmDC,IAAnD,CAAwD,YAAM;AAC1D,eAAOH,MAAMI,WAAN,CAAkB,QAAlB,EAA4B,OAA5B,CAAP;AACH,KAFD,EAEGD,IAFH,CAEQ,UAACE,GAAD,EAAS;AACb,8BAAOA,IAAIC,IAAJ,KAAa,QAApB;AACA,eAAON,MAAMO,cAAN,CAAqB,QAArB,EAA+B,OAA/B,CAAP;AACH,KALD,EAKGJ,IALH,CAKQ,YAAM;AACV,eAAOH,MAAMI,WAAN,CAAkB,QAAlB,EAA4B,OAA5B,CAAP;AACH,KAPD,EAOGD,IAPH,CAOQ,UAACK,KAAD,EAAW;AACf,yBAAOC,KAAP,CAAaD,KAAb,EAAoB,IAApB;AACAR,cAAMC,OAAN;AACH,KAVD;AAWH,CAbD","file":"_GlassDb.js","sourcesContent":["import assert from \"assert\";\nimport edm from \"../mock/edm\";\nimport GlassDb from \"../glassDb/GlassDb\";\n\n// let testConfig = {\n//     \"dbDriver\": {\n//         \"name\": \"sqlite\",\n//         \"options\": {\n//             storageMode: \"memory\"\n//         }\n//     },\n//     \"fileSystem\": {\n//         \"name\": \"not yet implemented\",\n//         \"options\": {}\n//     },\n//     \"doors\": [\n//         {\n//             \"name\": \"express\",\n//             \"options\": {\n//                 \"address\": \"127.0.0.1\",\n//                 \"port\": \"9000\"\n//             }\n//         }\n//     ]\n// };\n\nlet testConfig = {\n    \"dbDriver\": {\n        \"name\": \"mssql\",\n        \"options\": {\n            user: process.env.META_DB_TEST_USER,\n            password: process.env.META_DB_TEST_PW,\n            server: process.env.META_DB_TEST_SERVER,\n            database: process.env.META_DB_TEST_DB,\n            dataDb: process.env.META_DB_TEST_DB_DATA,\n            edmDb: process.env.META_DB_TEST_DB_EDM,\n            edmSchema: \"dbo\",\n            dataSchema: \"dbo\"\n        }\n    },\n    \"fileSystem\": {\n        \"name\": \"not yet implemented\",\n        \"options\": {}\n    },\n    \"doors\": [\n        // {\n        //     \"name\": \"express\",\n        //     \"options\": {\n        //         \"address\": \"127.0.0.1\",\n        //         \"port\": \"9000\"\n        //     }\n        // }\n    ]\n};\n\nexports[\"GlassDb\"] = () => {\n    let glass = new GlassDb(testConfig);\n    assert(glass);\n    glass.dispose();\n};\n\n// finish the sqlite driver so we can test this without pounding the mssql server\n\nexports[\"GlassDb add, get, delete edm\"] = () => {\n    let glass = new GlassDb(testConfig);\n    glass.addEdmAsync(\"newEDM\", \"0.0.3\", \"A Test EDM\").then(() => {\n        return glass.getEdmAsync(\"newEdm\", \"0.0.3\");\n    }).then((edm) => {\n        assert(edm.name === \"newEDM\");\n        return glass.deleteEdmAsync(\"newEDM\", \"0.0.3\");\n    }).then(() => {\n        return glass.getEdmAsync(\"newEDM\", \"0.0.3\");\n    }).then((noEDM) => {\n        assert.equal(noEDM, null);\n        glass.dispose();\n    });\n};\n"]}