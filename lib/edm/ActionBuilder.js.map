{"version":3,"sources":["../../src/edm/ActionBuilder.js"],"names":["CommandBuilder","column","command","execute","options","type","name","label","isPrimaryKey","isAutoIncrement","isNullable","isIndexed","revert","table","pluralLabel","tableName","edm","tables","reduce","accumulator"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,c;AACjB,8BAAc;AAAA;AAEb;;;;sCAEaC,M,EAAQ;AAClB,gBAAIC,UAAU,uBAAd;AACAA,oBAAQC,OAAR,CAAgBD,OAAhB,GAA0B,WAA1B;AACAA,oBAAQC,OAAR,CAAgBC,OAAhB,GAA0B;AACtBC,sBAAMJ,OAAOI,IADS;AAEtBC,sBAAML,OAAOK,IAFS;AAGtBC,uBAAON,OAAOM,KAHQ;AAItBC,8BAAc,OAAOP,OAAOO,YAAd,KAA+B,SAA/B,GAA2CP,OAAOO,YAAlD,GAAiE,KAJzD;AAKtBC,iCAAiB,OAAOR,OAAOQ,eAAd,KAAkC,SAAlC,GAA8CR,OAAOQ,eAArD,GAAuE,KALlE;AAMtBC,4BAAY,OAAOT,OAAOS,UAAd,KAA6B,SAA7B,GAAyCT,OAAOS,UAAhD,GAA6D,KANnD;AAOtBC,2BAAW,OAAOV,OAAOU,SAAd,KAA4B,SAA5B,GAAwCV,OAAOU,SAA/C,GAA2D;AAPhD,aAA1B;;AAUAT,oBAAQU,MAAR,CAAeV,OAAf,GAAyB,cAAzB;AACAA,oBAAQU,MAAR,CAAeR,OAAf,GAAyB;AACrBC,sBAAMJ,OAAOI,IADQ;AAErBC,sBAAML,OAAOK,IAFQ;AAGrBC,uBAAON,OAAOM,KAHO;AAIrBC,8BAAc,OAAOP,OAAOO,YAAd,KAA+B,SAA/B,GAA2CP,OAAOO,YAAlD,GAAiE,KAJ1D;AAKrBC,iCAAiB,OAAOR,OAAOQ,eAAd,KAAkC,SAAlC,GAA8CR,OAAOQ,eAArD,GAAuE,KALnE;AAMrBC,4BAAY,OAAOT,OAAOS,UAAd,KAA6B,SAA7B,GAAyCT,OAAOS,UAAhD,GAA6D,KANpD;AAOrBC,2BAAW,OAAOV,OAAOU,SAAd,KAA4B,SAA5B,GAAwCV,OAAOU,SAA/C,GAA2D;AAPjD,aAAzB;AASH;;;4CAEmBE,K,EAAO;AACvB,gBAAIX,UAAU,uBAAd;AACAA,oBAAQC,OAAR,CAAgBD,OAAhB,GAA0B,UAA1B;AACAA,oBAAQC,OAAR,CAAgBC,OAAhB,GAA0B;AACtBE,sBAAMO,MAAMP,IADU;AAEtBC,uBAAOM,MAAMN,KAFS;AAGtBO,6BAAaD,MAAMC;AAHG,aAA1B;;AAMAZ,oBAAQU,MAAR,CAAeV,OAAf,GAAyB,aAAzB;AACAA,oBAAQU,MAAR,CAAeR,OAAf,GAAyB;AACrBW,2BAAWF,MAAMP;AADI,aAAzB;AAGH;;;8CAEqBU,G,EAAK;AACvB,mBAAOA,IAAIC,MAAJ,CAAWC,MAAX,CAAkB,UAACC,WAAD,EAAcN,KAAd,EAAwB,CAEhD,CAFM,EAEJ,EAFI,CAAP;AAGH;;;;;;kBAjDgBb,c","file":"ActionBuilder.js","sourcesContent":["import Command from \"./../migration/Command\";\n\nexport default class CommandBuilder {\n    constructor() {\n\n    }\n\n    _createColumn(column) {\n        let command = new Command();\n        command.execute.command = \"addColumn\";\n        command.execute.options = {\n            type: column.type,\n            name: column.name,\n            label: column.label,\n            isPrimaryKey: typeof column.isPrimaryKey === \"boolean\" ? column.isPrimaryKey : false,\n            isAutoIncrement: typeof column.isAutoIncrement === \"boolean\" ? column.isAutoIncrement : false,\n            isNullable: typeof column.isNullable === \"boolean\" ? column.isNullable : false,\n            isIndexed: typeof column.isIndexed === \"boolean\" ? column.isIndexed : false\n        };\n\n        command.revert.command = \"removeColumn\";\n        command.revert.options = {\n            type: column.type,\n            name: column.name,\n            label: column.label,\n            isPrimaryKey: typeof column.isPrimaryKey === \"boolean\" ? column.isPrimaryKey : false,\n            isAutoIncrement: typeof column.isAutoIncrement === \"boolean\" ? column.isAutoIncrement : false,\n            isNullable: typeof column.isNullable === \"boolean\" ? column.isNullable : false,\n            isIndexed: typeof column.isIndexed === \"boolean\" ? column.isIndexed : false\n        };\n    }\n\n    _createTableCommand(table) {\n        let command = new Command();\n        command.execute.command = \"addTable\";\n        command.execute.options = {\n            name: table.name,\n            label: table.label,\n            pluralLabel: table.pluralLabel\n        }\n\n        command.revert.command = \"removeTable\";\n        command.revert.options = {\n            tableName: table.name\n        }\n    }\n\n    createCommandsFromEdm(edm) {\n        return edm.tables.reduce((accumulator, table) => {\n\n        }, []);\n    }\n}"]}