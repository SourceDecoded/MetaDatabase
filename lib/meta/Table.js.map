{"version":3,"sources":["../../src/meta/Table.js"],"names":["defaultDecorators","name","edm","table","decorators","Table","metaDatabase","fileSystem","Error","edmTable","_getEdmTable","decoratorOptions","filter","decorator","findIndex","tableDecorator","options","reduce","previous","current","then","activatedAsync","Promise","resolve","user","entity","_invokeMethodOnDecoratorsAsync","_invokeMethodWithRecoveryOnDecoratorsAsync","delta","promise","Object","assign","_invokeMethodWithRecoveryAsync","tables","find","columns","column","isPrimaryKey","_getPrimaryKeyColumn","id","version","obj","method","args","result","apply","catch","eror","customArgs","slice","push","_invokeMethodAsync","freeze","decoratorInstance","instance","_assertUser","_prepareEntityToBeAddedAsync","_validateEntityToBeAddedAsync","addEntityAsync","_entityAddedAsync","provider","getQueryProvider","queryable","getEntityByIdAsync","getFileSizeAsync","_getFilePathById","getReadStreamAsync","filePath","getWriteStreamAsync","writable","on","primaryKey","_getPrimaryKeyName","asQueryable","where","expBuilder","property","isEqualTo","toArrayAsync","results","length","decoratorName","index","splice","_approveEntityToBeRemovedAsync","removeFileByIdAsync","error","removeEntityAsync","_entityRemovedAsync","removeFileAsync","updatedEntity","_prepareEntityToBeUpdatedAsync","_validateEntityToBeUpdatedAsync","updateEntityAsync","_entityUpdatedAsync"],"mappings":"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","file":"Table.js","sourcesContent":["import Provider from \"./Provider\";\nimport { Queryable } from \"queryablejs\";\nimport User from \"./../user/User\";\n\nconst defaultDecorators = {\n    name: null,\n    edm: null,\n    table: null,\n    decorators: []\n};\n\nexport default class Table {\n    constructor({\n        metaDatabase = null,\n        table = null,\n        decorators = [],\n        fileSystem = null\n         } = {}) {\n\n        if (table == null) {\n            throw new Error(\"Null Argument Exception: Table needs to have a ITable.\");\n        }\n\n        if (metaDatabase == null) {\n            throw new Error(\"Null Argument Exception: Table needs to have a metaDatabase.\");\n        }\n\n        if (fileSystem == null) {\n            throw new Error(\"Null Argument Exception: MetaTable needs to have a fileSystem.\");\n        }\n\n        this.table = table;\n        this.metaDatabase = metaDatabase;\n        this.name = table.name;\n        this.edm = table.edm;\n        this.fileSystem = fileSystem;\n        this.edmTable = this._getEdmTable(this.name);\n        this.decoratorOptions = {};\n        this.decorators = decorators.filter((decorator) => {\n            let decorators = this.edmTable.decorators || [];\n\n            return decorators.findIndex((tableDecorator) => {\n                this.decoratorOptions[tableDecorator.name] = tableDecorator.options;\n                return tableDecorator.name === decorator.name\n            }) > -1;\n        });\n\n        this.decorators.reduce((previous, current) => {\n            return previous.then(() => {\n                return current.activatedAsync(this.metaDatabase);\n            });\n        }, Promise.resolve());\n    }\n\n    _approveEntityToBeRemovedAsync(user, entity) {\n        return this._invokeMethodOnDecoratorsAsync(user, \"approveEntityToBeRemovedAsync\", [this.name, entity]).then(() => {\n            return entity;\n        });\n    }\n\n    _assertUser(user) {\n        if (!(user instanceof User)) {\n            throw new Error(\"Illegal Argument Exception: user needs to be an instance of User.\");\n        }\n    }\n\n    _entityAddedAsync(user, entity) {\n        return this._invokeMethodWithRecoveryOnDecoratorsAsync(user, \"entityAddedAsync\", [this.name, entity]).then(() => {\n            return entity;\n        });\n    }\n\n    _entityRemovedAsync(user, entity) {\n        return this._invokeMethodWithRecoveryOnDecoratorsAsync(user, \"entityRemovedAsync\", [this.name, entity]).then(() => {\n            return entity;\n        });\n    }\n\n    _entityUpdatedAsync(user, entity, delta) {\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then(() => {\n                let options = Object.assign({ user }, this.decoratorOptions[decorator.name]);\n                return this._invokeMethodWithRecoveryAsync(decorator, \"entityUpdatedAsync\", [this.name, entity, delta, options]);\n            });\n        }, Promise.resolve());\n    }\n\n    _getEdmTable(name) {\n        return this.edm.tables.find((table) => {\n            return table.name === name;\n        });\n    }\n\n    _getPrimaryKeyColumn() {\n        return this._getEdmTable(this.name).columns.find((column) => {\n            return column.isPrimaryKey;\n        });\n    }\n\n    _getPrimaryKeyName() {\n        return this._getPrimaryKeyColumn().name;\n    }\n\n    _getFilePathById(id) {\n        return `${this.edm.name}_${this.edm.version}_${this.edmTable.name}_${id}`;\n    }\n\n    _invokeMethodAsync(obj, method, args = []) {\n        if (obj != null && typeof obj[method] === \"function\") {\n            var result = obj[method].apply(obj, args);\n\n            if (!(result instanceof Promise)) {\n                result = Promise.resolve(result);\n            }\n\n            return result;\n        }\n\n        return Promise.resolve();\n    }\n\n    _invokeMethodWithRecoveryAsync(obj, method, args = []) {\n        let promise = Promise.resolve();\n\n        if (obj != null && typeof obj[method] === \"function\") {\n            promise = obj[method].apply(obj, args);\n\n            if (!(promise instanceof Promise)) {\n                promise = Promise.resolve(promise);\n            }\n        }\n\n        return promise.catch((eror) => {\n            // Log error.\n            return null\n        });\n    }\n\n    _invokeMethodOnDecoratorsAsync(user, method, args) {\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then(() => {\n                let options = Object.assign({ user: user }, this.decoratorOptions[decorator.name]);\n\n                let customArgs = args.slice();\n                customArgs.push(options);\n\n                return this._invokeMethodAsync(decorator, method, customArgs);\n            });\n        }, Promise.resolve());\n    }\n\n    _invokeMethodWithRecoveryOnDecoratorsAsync(user, method, args = []) {\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then(() => {\n                let options = Object.assign({ user: user }, this.decoratorOptions[decorator.name]);\n                let customArgs = args.slice();\n                customArgs.push(options);\n\n                return this._invokeMethodWithRecoveryAsync(decorator, method, customArgs);\n            });\n        }, Promise.resolve());\n    }\n\n    _prepareEntityToBeAddedAsync(user, entity) {\n        return this._invokeMethodOnDecoratorsAsync(user, \"prepareEntityToBeAddedAsync\", [this.name, entity]);\n    }\n\n    _prepareEntityToBeUpdatedAsync(user, entity, delta) {\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then((delta) => {\n                let options = Object.assign({ user: user }, this.decoratorOptions[decorator.name]);\n                return this._invokeMethodAsync(decorator, \"prepareEntityToBeUpdatedAsync\", [this.name, entity, delta, options]);\n            }).then(() => { return delta });\n        }, Promise.resolve(delta))\n    }\n\n    _validateEntityToBeAddedAsync(user, entity) {\n        Object.freeze(entity);\n\n        return this._invokeMethodOnDecoratorsAsync(user, \"validateEntityToBeAddedAsync\", [this.name, entity]).then(() => {\n            return entity;\n        });\n    }\n\n    _validateEntityToBeUpdatedAsync(user, entity, delta) {\n        Object.freeze(delta);\n\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then(() => {\n                let options = Object.assign({ user: user }, this.decoratorOptions[decorator.name]);\n                return this._invokeMethodAsync(decorator, \"validateEntityToBeUpdatedAsync\", [this.name, entity, delta, options]);\n            });\n        }, Promise.resolve()).then(() => {\n            return delta;\n        });\n    }\n\n    addDecoratorAsync(decorator) {\n        let decoratorInstance = this.metaDatabase.decorators.find((instance) => {\n            return instance.name === decorator.name;\n        });\n        this.decorators.push(decoratorInstance);\n        return decoratorInstance.activatedAsync(this.metaDatabase);\n    }\n\n    addEntityAsync(user, entity) {\n        this._assertUser(user);\n\n        return this._prepareEntityToBeAddedAsync(user, entity).then(() => {\n            return this._validateEntityToBeAddedAsync(user, entity);\n        }).then(() => {\n            return this.table.addEntityAsync(entity);\n        }).then((entity) => {\n            return this._entityAddedAsync(user, entity);\n        });\n    }\n\n    asQueryable(user) {\n        this._assertUser(user);\n\n        let provider = this.getQueryProvider(user);\n        let queryable = new Queryable(this.table.name);\n\n        queryable.provider = provider;\n\n        return queryable;\n    }\n\n    getFileSizeByIdAsync(user, id) {\n        return this.getEntityByIdAsync(user, id).then((entity) => {\n            return this.getFileSizeAsync(this._getFilePathById(id));\n        });\n    }\n\n    getFileReadStreamByIdAsync(user, id) {\n        return this.getEntityByIdAsync(user, id).then((entity) => {\n            return this.fileSystem.getReadStreamAsync(this._getFilePathById(id));\n        });\n    }\n\n    getFileWriteStreamByIdAsync(user, id) {\n        let filePath = this._getFilePathById(id);\n        return this.getEntityByIdAsync(user, id).then((entity) => {\n            return this.fileSystem.getWriteStreamAsync(filePath);\n        }).then((writable) => {\n            writable.on(\"finish\", () => {\n                this._invokeMethodWithRecoveryOnDecoratorsAsync(user, \"fileUpdatedAsync\", [id, filePath]);\n            });\n            return writable;\n        });\n    }\n\n    getEntityByIdAsync(user, id) {\n        let primaryKey = this._getPrimaryKeyName();\n        return this.asQueryable(user).where((expBuilder) => {\n            return expBuilder.property(primaryKey).isEqualTo(id);\n        }).toArrayAsync().then((results) => {\n            if (results.length === 1) {\n                return results[0];\n            }\n\n            throw new Error(\"Entity Not Found\");\n        });\n    }\n\n    getQueryProvider(user) {\n        this._assertUser(user);\n\n        return new Provider(user, this, this.metaDatabase);\n    }\n\n    removeDecoratorAsync(decoratorName) {\n        let index = this.decorators.findIndex((decorator) => {\n            return decorator.name === decoratorName;\n        });\n\n        table.decorators.splice(index, 1);\n\n        return Promise.resolve();\n    }\n\n    removeEntityAsync(user, entity) {\n        this._assertUser(user);\n\n        Object.freeze(entity);\n        return this._approveEntityToBeRemovedAsync(user, entity).then(() => {\n            let primaryKey = this._getPrimaryKeyName();\n\n            return this.removeFileByIdAsync(user, entity[primaryKey]).catch((error) => {\n                return;\n            });\n        }).then(() => {\n            return this.table.removeEntityAsync(entity);\n        }).then(() => {\n            return this._entityRemovedAsync(user, entity);\n        });\n    }\n\n    removeFileByIdAsync(user, id) {\n        let filePath = this._getFilePathById(id);\n\n        return this.getEntityByIdAsync(user, id).then(() => {\n            return this.fileSystem.removeFileAsync(filePath);\n        }).then(() => {\n            return this._invokeMethodWithRecoveryOnDecoratorsAsync(user, \"fileRemovedAsync\", [id, filePath]);\n        });\n    }\n\n    updateEntityAsync(user, entity, delta) {\n        this._assertUser(user);\n\n        Object.freeze(entity);\n        let updatedEntity;\n\n        return this._prepareEntityToBeUpdatedAsync(user, entity, delta).then((delta) => {\n            return this._validateEntityToBeUpdatedAsync(user, entity, delta);\n        }).then((delta) => {\n            return this.table.updateEntityAsync(user, entity, delta).then((entity) => {\n                updatedEntity = entity;\n                return delta;\n            });\n        }).then((delta) => {\n            return this._entityUpdatedAsync(user, updatedEntity, delta);\n        }).then(() => {\n            return updatedEntity;\n        });\n    }\n\n}"]}