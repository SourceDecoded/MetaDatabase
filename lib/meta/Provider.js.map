{"version":3,"sources":["../../src/meta/Provider.js"],"names":["Provider","user","metaTable","metaDatabase","provider","table","decorators","obj","method","args","result","apply","Promise","resolve","queryable","query","getQuery","innerQueries","where","getMatchingNodes","reduce","promise","queryableExpression","value","type","getTable","previousQueryable","then","decorator","options","decoratorOptions","name","_invokeMethodAsync","modifiedQuery","select","orderBy","skip","take","_refineInnerQueriesAsync","_refineQueryableAsync","toArrayAsync","results","previousResults","Array","isArray","length","toArrayWithCountAsync","countAsync"],"mappings":";;;;;;;;AAAA;;;;IAEqBA,Q;AACjB,sBAAYC,IAAZ,EAAkBC,SAAlB,EAA6BC,YAA7B,EAA2C;AAAA;;AACvC,aAAKD,SAAL,GAAiBA,SAAjB;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKC,QAAL,GAAgBF,UAAUG,KAAV,CAAgBD,QAAhC;AACA,aAAKE,UAAL,GAAkBJ,UAAUI,UAA5B;AACA,aAAKL,IAAL,GAAYA,IAAZ;AACH;;;;2CAEkBM,G,EAAKC,M,EAAmB;AAAA,gBAAXC,IAAW,uEAAJ,EAAI;;AACvC,gBAAIF,OAAO,IAAP,IAAe,OAAOA,IAAIC,MAAJ,CAAP,KAAuB,UAA1C,EAAsD;AAClD,oBAAIE,SAASH,IAAIC,MAAJ,EAAYG,KAAZ,CAAkBJ,GAAlB,EAAuBE,IAAvB,CAAb;;AAEA,oBAAI,EAAEC,kBAAkBE,OAApB,CAAJ,EAAkC;AAC9BF,6BAASE,QAAQC,OAAR,CAAgBH,MAAhB,CAAT;AACH;;AAED,uBAAOA,MAAP;AACH;;AAED,mBAAOE,QAAQC,OAAR,EAAP;AACH;;;iDAEwBC,S,EAAW;AAAA;;AAChC,gBAAIb,OAAO,KAAKA,IAAhB;AACA,gBAAIc,QAAQD,UAAUE,QAAV,EAAZ;AACA,gBAAIC,eAAeF,MAAMG,KAAN,CAAYC,gBAAZ,CAA6B,iCAAoB,WAApB,CAA7B,CAAnB;;AAEA,mBAAOF,aAAaG,MAAb,CAAoB,UAACC,OAAD,EAAUC,mBAAV,EAAkC;AACzD,oBAAIP,QAAQO,oBAAoBC,KAAhC;AACA,oBAAIT,YAAY,2BAAcC,MAAMS,IAApB,EAA0BT,KAA1B,CAAhB;AACA,oBAAIb,YAAY,MAAKC,YAAL,CAAkBsB,QAAlB,CAA2BV,MAAMS,IAAjC,CAAhB;AACA,oBAAIE,oBAAoBZ,SAAxB;;AAEA,uBAAOO,QAAQM,IAAR,CAAa,YAAM;AACtB,2BAAO,MAAKrB,UAAL,CAAgBc,MAAhB,CAAuB,UAACC,OAAD,EAAUO,SAAV,EAAwB;AAClD,+BAAOP,QAAQM,IAAR,CAAa,UAACb,SAAD,EAAe;AAC/BY,gDAAoBZ,SAApB;;AAEA,gCAAIe,UAAU3B,UAAU4B,gBAAV,CAA2BF,UAAUG,IAArC,CAAd;AACA,gCAAIrB,SAAS,MAAKsB,kBAAL,CAAwBJ,SAAxB,EAAmC,sBAAnC,EAA2D,CAAC3B,IAAD,EAAOa,SAAP,EAAkBe,OAAlB,CAA3D,CAAb;;AAEA,gCAAInB,UAAU,IAAd,EAAoB;AAChBA,yCAASI,SAAT;AACH;;AAED,gCAAI,EAAEJ,kBAAkBE,OAApB,CAAJ,EAAkC;AAC9B,uCAAOA,QAAQC,OAAR,CAAgBH,MAAhB,CAAP;AACH;;AAED,mCAAOA,MAAP;AACH,yBAfM,EAeJiB,IAfI,CAeC,UAACb,SAAD,EAAe;AACnB,gCAAI,EAAEA,2CAAF,CAAJ,EAAuC;AACnC,uCAAOY,iBAAP;AACH;;AAED,gCAAIO,gBAAgBlB,MAAMC,QAAN,EAApB;AACAD,kCAAMmB,MAAN,GAAeD,cAAcC,MAA7B;AACAnB,kCAAMG,KAAN,GAAce,cAAcf,KAA5B;AACAH,kCAAMoB,OAAN,GAAgBF,cAAcE,OAA9B;AACApB,kCAAMqB,IAAN,GAAaH,cAAcG,IAA3B;AACArB,kCAAMsB,IAAN,GAAaJ,cAAcI,IAA3B;AACAtB,kCAAMS,IAAN,GAAaS,cAAcT,IAA3B;;AAEA,mCAAOV,SAAP;AACH,yBA7BM,CAAP;AA8BH,qBA/BM,EA+BJF,QAAQC,OAAR,CAAgBC,SAAhB,CA/BI,CAAP;AAgCH,iBAjCM,CAAP;AAmCH,aAzCM,EAyCJF,QAAQC,OAAR,EAzCI,EAyCec,IAzCf,CAyCoB,YAAM;AAC7B,uBAAOb,SAAP;AACH,aA3CM,CAAP;AA4CH;;;8CAEqBA,S,EAAW;AAAA;;AAC7B,gBAAIb,OAAO,KAAKA,IAAhB;;AAEA,mBAAO,KAAKqC,wBAAL,CAA8BxB,SAA9B,EAAyCa,IAAzC,CAA8C,UAACb,SAAD,EAAe;AAChE,oBAAIY,oBAAoBZ,SAAxB;;AAEA,uBAAO,OAAKR,UAAL,CAAgBc,MAAhB,CAAuB,UAACC,OAAD,EAAUO,SAAV,EAAwB;AAClD,2BAAOP,QAAQM,IAAR,CAAa,UAACb,SAAD,EAAe;AAC/BY,4CAAoBZ,SAApB;;AAEA,4BAAIe,UAAU,OAAK3B,SAAL,CAAe4B,gBAAf,CAAgCF,UAAUG,IAA1C,CAAd;AACA,4BAAIrB,SAAS,OAAKsB,kBAAL,CAAwBJ,SAAxB,EAAmC,sBAAnC,EAA2D,CAAC3B,IAAD,EAAOa,SAAP,EAAkBe,OAAlB,CAA3D,CAAb;;AAEA,4BAAInB,UAAU,IAAd,EAAoB;AAChBA,qCAASI,SAAT;AACH;;AAED,4BAAI,EAAEJ,kBAAkBE,OAApB,CAAJ,EAAkC;AAC9B,mCAAOA,QAAQC,OAAR,CAAgBH,MAAhB,CAAP;AACH;;AAED,+BAAOA,MAAP;AACH,qBAfM,EAeJiB,IAfI,CAeC,UAACb,SAAD,EAAe;AACnB,4BAAI,EAAEA,2CAAF,CAAJ,EAAuC;AACnC,mCAAOY,iBAAP;AACH;AACD,+BAAOZ,SAAP;AACH,qBApBM,CAAP;AAsBH,iBAvBM,EAuBJF,QAAQC,OAAR,CAAgBC,SAAhB,CAvBI,CAAP;AAyBH,aA5BM,CAAP;AA6BH;;;qCAEYA,S,EAAW;AAAA;;AACpB,gBAAIb,OAAO,KAAKA,IAAhB;;AAEA,mBAAO,KAAKsC,qBAAL,CAA2BzB,SAA3B,EAAsCa,IAAtC,CAA2C,UAACb,SAAD,EAAe;AAC7D,uBAAO,OAAKV,QAAL,CAAcoC,YAAd,CAA2B1B,SAA3B,CAAP;AACH,aAFM,EAEJa,IAFI,CAEC,UAACc,OAAD,EAAa;AACjB;AACA;AACA,oBAAIC,kBAAkBD,OAAtB;;AAEA,uBAAO,OAAKnC,UAAL,CAAgBc,MAAhB,CAAuB,UAACC,OAAD,EAAUO,SAAV,EAAwB;AAClD,2BAAOP,QAAQM,IAAR,CAAa,UAACc,OAAD,EAAa;AAC7B,4BAAI,CAACE,MAAMC,OAAN,CAAcH,OAAd,CAAD,IAA2BA,QAAQI,MAAR,KAAmBH,gBAAgBG,MAAlE,EAA0E;AACtEJ,sCAAUC,eAAV;AACH;;AAEDA,0CAAkBD,OAAlB;;AAEA,+BAAKT,kBAAL,CAAwBJ,SAAxB,EAAmC,UAAnC,EAA+C,CAACa,OAAD,CAA/C;AACH,qBARM,CAAP;AAUH,iBAXM,EAWJ7B,QAAQC,OAAR,CAAgB4B,OAAhB,CAXI,CAAP;AAYH,aAnBM,CAAP;AAoBH;;;8CAEqB3B,S,EAAW;AAAA;;AAC7B,gBAAIb,OAAO,KAAKA,IAAhB;;AAEA,mBAAO,KAAKsC,qBAAL,CAA2BzB,SAA3B,EAAsCa,IAAtC,CAA2C,UAACb,SAAD,EAAe;AAC7D,uBAAO,OAAKV,QAAL,CAAc0C,qBAAd,CAAoChC,SAApC,CAAP;AACH,aAFM,CAAP;AAGH;;;mCAEUA,S,EAAW;AAAA;;AAClB,gBAAIb,OAAO,KAAKA,IAAhB;;AAEA,mBAAO,KAAKsC,qBAAL,CAA2BzB,SAA3B,EAAsCa,IAAtC,CAA2C,UAACb,SAAD,EAAe;AAC7D,uBAAO,OAAKV,QAAL,CAAc2C,UAAd,CAAyBjC,SAAzB,CAAP;AACH,aAFM,CAAP;AAGH;;;;;;kBAnJgBd,Q","file":"Provider.js","sourcesContent":["import { Queryable, ValueExpression } from \"queryablejs\";\n\nexport default class Provider {\n    constructor(user, metaTable, metaDatabase) {\n        this.metaTable = metaTable;\n        this.metaDatabase = metaDatabase;\n        this.provider = metaTable.table.provider;\n        this.decorators = metaTable.decorators;\n        this.user = user;\n    }\n\n    _invokeMethodAsync(obj, method, args = []) {\n        if (obj != null && typeof obj[method] === \"function\") {\n            var result = obj[method].apply(obj, args);\n\n            if (!(result instanceof Promise)) {\n                result = Promise.resolve(result);\n            }\n\n            return result;\n        }\n\n        return Promise.resolve();\n    }\n\n    _refineInnerQueriesAsync(queryable) {\n        let user = this.user;\n        let query = queryable.getQuery();\n        let innerQueries = query.where.getMatchingNodes(new ValueExpression(\"queryable\"));\n\n        return innerQueries.reduce((promise, queryableExpression) => {\n            let query = queryableExpression.value;\n            let queryable = new Queryable(query.type, query);\n            let metaTable = this.metaDatabase.getTable(query.type);\n            let previousQueryable = queryable;\n\n            return promise.then(() => {\n                return this.decorators.reduce((promise, decorator) => {\n                    return promise.then((queryable) => {\n                        previousQueryable = queryable;\n\n                        let options = metaTable.decoratorOptions[decorator.name];\n                        let result = this._invokeMethodAsync(decorator, \"refineQueryableAsync\", [user, queryable, options])\n\n                        if (result == null) {\n                            result = queryable;\n                        }\n\n                        if (!(result instanceof Promise)) {\n                            return Promise.resolve(result);\n                        }\n\n                        return result;\n                    }).then((queryable) => {\n                        if (!(queryable instanceof Queryable)) {\n                            return previousQueryable;\n                        }\n\n                        let modifiedQuery = query.getQuery();\n                        query.select = modifiedQuery.select;\n                        query.where = modifiedQuery.where;\n                        query.orderBy = modifiedQuery.orderBy;\n                        query.skip = modifiedQuery.skip;\n                        query.take = modifiedQuery.take;\n                        query.type = modifiedQuery.type;\n\n                        return queryable;\n                    });\n                }, Promise.resolve(queryable));\n            });\n\n        }, Promise.resolve()).then(() => {\n            return queryable;\n        });\n    }\n\n    _refineQueryableAsync(queryable) {\n        let user = this.user;\n\n        return this._refineInnerQueriesAsync(queryable).then((queryable) => {\n            let previousQueryable = queryable;\n\n            return this.decorators.reduce((promise, decorator) => {\n                return promise.then((queryable) => {\n                    previousQueryable = queryable;\n\n                    let options = this.metaTable.decoratorOptions[decorator.name];\n                    let result = this._invokeMethodAsync(decorator, \"refineQueryableAsync\", [user, queryable, options]);\n\n                    if (result == null) {\n                        result = queryable;\n                    }\n\n                    if (!(result instanceof Promise)) {\n                        return Promise.resolve(result);\n                    }\n\n                    return result;\n                }).then((queryable) => {\n                    if (!(queryable instanceof Queryable)) {\n                        return previousQueryable;\n                    }\n                    return queryable;\n                });\n\n            }, Promise.resolve(queryable));\n\n        });\n    }\n\n    toArrayAsync(queryable) {\n        let user = this.user;\n\n        return this._refineQueryableAsync(queryable).then((queryable) => {\n            return this.provider.toArrayAsync(queryable);\n        }).then((results) => {\n            // We need to save the previous results just in case the decorator doesn't implement\n            // the life-cycle or it returns something that isn't an array.\n            let previousResults = results;\n\n            return this.decorators.reduce((promise, decorator) => {\n                return promise.then((results) => {\n                    if (!Array.isArray(results) || results.length !== previousResults.length) {\n                        results = previousResults;\n                    }\n\n                    previousResults = results;\n\n                    this._invokeMethodAsync(decorator, \"mapAsync\", [results]);\n                });\n\n            }, Promise.resolve(results));\n        });\n    }\n\n    toArrayWithCountAsync(queryable) {\n        let user = this.user;\n\n        return this._refineQueryableAsync(queryable).then((queryable) => {\n            return this.provider.toArrayWithCountAsync(queryable);\n        });\n    }\n\n    countAsync(queryable) {\n        let user = this.user;\n\n        return this._refineQueryableAsync(queryable).then((queryable) => {\n            return this.provider.countAsync(queryable);\n        });\n    }\n}"]}