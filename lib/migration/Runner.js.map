{"version":3,"sources":["../../src/migration/Runner.js"],"names":["defaultOptions","edm","history","migrator","decorators","Runner","options","Object","assign","edmValidator","edmMigrator","_executeCommandAsync","bind","_revertCommandAsync","_validateOptions","promise","command","consequentialCommands","actionName","execute","action","migratorCommand","then","_validateCommand","Error","name","reduce","decorator","_invokeMethodAsyncWithRecovery","commands","Array","isArray","forEach","push","Promise","resolve","apply","catch","error","executionError","message","inner","obj","methodName","args","result","revert","id","validate","_validateEdm","_validateMigrator","length","commandsCopy","slice","shift","unshift","migrateAsync","index","reverseCommands","reverse","revertError","modifiedError","innerError"],"mappings":"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","file":"Runner.js","sourcesContent":["import Validator from \"./../edm/Validator\";\nimport Migrator from \"./../edm/Migrator\";\n\nconst defaultOptions = {\n    edm: null,\n    history: [],\n    migrator: null,\n    decorators: []\n};\n\nexport default class Runner {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n\n        this.edm = options.edm;\n        this.migrator = options.migrator;\n        this.edmValidator = new Validator();\n        this.edmMigrator = new Migrator(this.edm);\n        this.decorators = options.decorators;\n\n        this._executeCommandAsync = this._executeCommandAsync.bind(this);\n        this._revertCommandAsync = this._revertCommandAsync.bind(this);\n\n        this._validateOptions(options);\n\n    }\n\n    _executeCommandAsync(promise, command, consequentialCommands) {\n        let actionName = `${command.execute.action}Async`;\n        let options = command.execute.options;\n        let migratorCommand = this.migrator[actionName];\n\n        return promise.then(() => {\n\n            this._validateCommand(command);\n\n            if (typeof migratorCommand !== \"function\") {\n                throw new Error(`'${this.migrator.name}' migrator doesn't support this command. ${actionName}`);\n            }\n\n            return this.decorators.reduce((promise, decorator) => {\n\n                return promise.then(() => {\n                    return this._invokeMethodAsyncWithRecovery(decorator, actionName, [options])\n                }).then((commands) => {\n\n                    if (Array.isArray(commands)) {\n                        commands.forEach((command) => {\n                            consequentialCommands.push(command);\n                        });\n                    }\n\n                });\n\n            }, Promise.resolve());\n\n        }).then(() => {\n            return migratorCommand.apply(this.migrator, [this.edm, options]);\n        }).then((commands) => {\n\n            if (Array.isArray(commands)) {\n                commands.forEach((command) => {\n                    consequentialCommands.push(command);\n                });\n            }\n\n            return this.edmMigrator[actionName](options);\n        }).catch((error) => {\n            let executionError = new Error(error.message);\n            executionError.inner = error;\n\n            throw executionError;\n        });\n    }\n\n    _invokeMethodAsyncWithRecovery(obj, methodName, args) {\n        if (obj && typeof obj[methodName] === \"function\") {\n            let result;\n\n            try {\n                result = obj[methodName].apply(obj, args);\n            } catch (error) {\n                result = null;\n            }\n\n            if (!(result instanceof Promise)) {\n                result = Promise.resolve(result);\n            }\n\n            return result.catch((error) => {\n                return null;\n            });\n        }\n\n        return Promise.resolve();\n    }\n\n    _revertCommandAsync(promise, command) {\n        let actionName = `${command.revert.action}Async`;\n        let migratorCommand = this.migrator[actionName];\n\n        return promise.then(() => {\n            if (typeof migratorCommand !== \"function\") {\n                throw new Error(`The ${this.migrator} migrator doesn't support this command. ${actionName}`);\n            }\n\n            return migratorCommand.apply(this.migrator, [command.revert.options]);\n        }).then(() => {\n            return this.edmMigrator[actionName](command.revert.options);\n        });\n    }\n\n    _validateCommand(command) {\n        if (typeof command.id !== \"string\") {\n            throw new Error(\"Commands require an id.\");\n        }\n\n        if (command.execute == null) {\n            throw new Error(\"Commands require an execute object.\");\n        }\n\n        if (typeof command.execute.action !== \"string\") {\n            throw new Error(\"Commands require an execute object with an command property of type string.\");\n        }\n\n        if (command.revert == null) {\n            throw new Error(\"Commands require an revert object.\");\n        }\n\n        if (typeof command.revert.action !== \"string\") {\n            throw new Error(\"Commands require an revert object with an command property of type string.\");\n        }\n    }\n\n    _validateEdm(edm) {\n        this.edmValidator.validate(edm);\n    }\n\n    _validateOptions(options) {\n        this._validateEdm(options.edm);\n        this._validateMigrator(options.migrator);\n    }\n\n    _validateMigrator(migrator) {\n        if (typeof migrator.name !== \"string\") {\n            throw new Error(\"Illegal Argument: Migrators need a name property.\");\n        }\n    }\n\n    migrateAsync(commands) {\n        if (commands.length === 0) {\n            return Promise.resolve();\n        }\n\n        let commandsCopy = commands.slice();\n        let consequentialCommands = [];\n        let promise = Promise.resolve();\n\n        while (commandsCopy.length > 0) {\n            let command = commandsCopy.shift();\n\n            promise = this._executeCommandAsync(promise, command, consequentialCommands).catch((error) => {\n                commandsCopy.unshift(command);\n                throw error;\n            });\n        }\n\n        return promise.then(() => {\n            return this.migrateAsync(consequentialCommands);\n        }).catch((error) => {\n\n            let index = commands.length - commandsCopy.length;\n            let reverseCommands = commands.slice(0, index).reverse();\n\n            return reverseCommands.reduce(this._revertCommandAsync, Promise.resolve()).catch((revertError) => {\n                let modifiedError = Error(\"Failed to revert commands on a failed migration. Current edm state is corrupted.\");\n                modifiedError.revertError = revertError;\n                modifiedError.innerError = error;\n\n                throw modifiedError;\n            }).then(() => {\n                let modifiedError = new Error(\"Failed Migration. Successfully reverted commands.\");\n                modifiedError.innerError = error;\n\n                throw modifiedError;\n            });\n\n        });\n\n    }\n}"]}