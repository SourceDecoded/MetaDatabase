{"version":3,"sources":["../src/MetaTable.js"],"names":["defaultDecorators","name","edm","table","decorators","MetaTable","fileSystem","Error","edmTable","_getEdmTable","decoratorOptions","filter","decorator","findIndex","tableDecorator","options","user","entity","_invokeMethodOnDecoratorsAsync","then","_invokeMethodWithRecoveryOnDecoratorsAsync","delta","reduce","promise","Object","assign","_invokeMethodWithRecoveryAsync","Promise","resolve","tables","find","columns","column","isPrimaryKey","id","version","obj","method","args","result","apply","catch","eror","customArgs","slice","push","_invokeMethodAsync","freeze","_assertUser","_prepareEntityToBeAddedAsync","_validateEntityToBeAddedAsync","addEntityAsync","_entityAddedAsync","provider","getQueryProvider","queryable","getEntityByIdAsync","getReadStreamAsync","_getFilePathById","getWriteStreamAsync","primaryKey","_getPrimaryKeyName","asQueryable","where","expBuilder","property","isEqualTo","toArrayAsync","results","_approveEntityToBeRemovedAsync","removeFileByIdAsync","error","removeEntityAsync","_entityRemovedAsync","removeFileAsync","updatedEntity","_prepareEntityToBeUpdatedAsync","_validateEntityToBeUpdatedAsync","updateEntityAsync","_entityUpdatedAsync"],"mappings":"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","file":"MetaTable.js","sourcesContent":["import Table from \"./sqlite/Table\"\nimport MetaProvider from \"./MetaProvider\";\nimport { Queryable } from \"queryablejs\";\nimport User from \"./User\";\n\nconst defaultDecorators = {\n    name: null,\n    edm: null,\n    table: null,\n    decorators: []\n};\n\nexport default class MetaTable {\n    constructor({\n        table = null,\n        decorators = [],\n        fileSystem = null\n         } = {}) {\n\n        if (table == null) {\n            throw new Error(\"Null Argument Exception: MetaTable needs to have a table.\");\n        }\n\n        if (fileSystem == null) {\n            throw new Error(\"Null Argument Exception: MetaTable needs to have a fileSystem.\");\n        }\n\n        this.table = table;\n        this.name = table.name;\n        this.edm = table.edm;\n        this.fileSystem = fileSystem;\n        this.edmTable = this._getEdmTable(this.name);\n        this.decoratorOptions = {};\n        this.decorators = decorators.filter((decorator) => {\n            let decorators = this.edmTable.decorators || [];\n\n            return decorators.findIndex((tableDecorator) => {\n                this.decoratorOptions[tableDecorator.name] = tableDecorator.options;\n                return tableDecorator.name === decorator.name\n            }) > -1;\n        });\n    }\n\n    _approveEntityToBeRemovedAsync(user, entity) {\n        return this._invokeMethodOnDecoratorsAsync(user, \"approveEntityToBeRemovedAsync\", [this.name, entity]).then(() => {\n            return entity;\n        });\n    }\n\n    _assertUser(user) {\n        if (!(user instanceof User)) {\n            throw new Error(\"Illegal Argument Exception: user needs to be an instance of User.\");\n        }\n    }\n\n    _entityAddedAsync(user, entity) {\n        return this._invokeMethodWithRecoveryOnDecoratorsAsync(user, \"entityAddedAsync\", [this.name, entity]).then(() => {\n            return entity;\n        });\n    }\n\n    _entityRemovedAsync(user, entity) {\n        return this._invokeMethodWithRecoveryOnDecoratorsAsync(user, \"entityRemovedAsync\", [this.name, entity]).then(() => {\n            return entity;\n        });\n    }\n\n    _entityUpdatedAsync(user, entity, delta) {\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then(() => {\n                let options = Object.assign({ user }, this.decoratorOptions[decorator.name]);\n                return this._invokeMethodWithRecoveryAsync(decorator, \"entityUpdatedAsync\", [this.name, entity, delta, options]);\n            });\n        }, Promise.resolve());\n    }\n\n    _getEdmTable(name) {\n        return this.edm.tables.find((table) => {\n            return table.name === name;\n        });\n    }\n\n    _getPrimaryKeyName() {\n        return this._getEdmTable(this.name).columns.find((column) => {\n            return column.isPrimaryKey;\n        });\n    }\n\n    _getFilePathById(id) {\n        return `${this.edm.name}_${this.edm.version}_${this.edmTable.name}_${id}`;\n    }\n\n    _invokeMethodAsync(obj, method, args = []) {\n        if (obj != null && typeof obj[method] === \"function\") {\n            var result = obj[method].apply(obj, args);\n\n            if (!(result instanceof Promise)) {\n                result = Promise.resolve(result);\n            }\n\n            return result;\n        }\n\n        return Promise.resolve();\n    }\n\n    _invokeMethodWithRecoveryAsync(obj, method, args = []) {\n        let promise = Promise.resolve();\n\n        if (obj != null && typeof obj[method] === \"function\") {\n            promise = obj[method].apply(obj, args);\n\n            if (!(promise instanceof Promise)) {\n                promise = Promise.resolve(promise);\n            }\n        }\n\n        return promise.catch((eror) => {\n            // Log error.\n            return null\n        });\n    }\n\n    _invokeMethodOnDecoratorsAsync(user, method, args) {\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then(() => {\n                let options = Object.assign({ user: user }, this.decoratorOptions[decorator.name]);\n\n                let customArgs = args.slice();\n                customArgs.push(options);\n\n                return this._invokeMethodAsync(decorator, method, customArgs);\n            });\n        }, Promise.resolve());\n    }\n\n    _invokeMethodWithRecoveryOnDecoratorsAsync(user, method, args) {\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then(() => {\n                let options = Object.assign({ user: user }, this.decoratorOptions[decorator.name]);\n                let customArgs = args.slice();\n                customArgs.push(options);\n\n                return this._invokeMethodWithRecoveryAsync(decorator, method, customArgs);\n            });\n        }, Promise.resolve());\n    }\n\n    _prepareEntityToBeAddedAsync(user, entity) {\n        return this._invokeMethodOnDecoratorsAsync(user, \"prepareEntityToBeAddedAsync\", [this.name, entity]);\n    }\n\n    _prepareEntityToBeUpdatedAsync(user, entity, delta) {\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then((delta) => {\n                let options = Object.assign({ user: user }, this.decoratorOptions[decorator.name]);\n                return this._invokeMethodAsync(decorator, \"prepareEntityToBeUpdatedAsync\", [this.name, entity, delta, options]);\n            }).then(() => { return delta });\n        }, Promise.resolve(delta))\n    }\n\n    _validateEntityToBeAddedAsync(user, entity) {\n        Object.freeze(entity);\n\n        return this._invokeMethodOnDecoratorsAsync(user, \"validateEntityToBeAddedAsync\", [this.name, entity]).then(() => {\n            return entity;\n        });\n    }\n\n    _validateEntityToBeUpdatedAsync(user, entity, delta) {\n        Object.freeze(delta);\n\n        return this.decorators.reduce((promise, decorator) => {\n            return promise.then(() => {\n                let options = Object.assign({ user: user }, this.decoratorOptions[decorator.name]);\n                return this._invokeMethodAsync(decorator, \"validateEntityToBeUpdatedAsync\", [this.name, entity, delta, options]);\n            });\n        }, Promise.resolve()).then(() => {\n            return delta;\n        });\n    }\n\n    addEntityAsync(user, entity) {\n        this._assertUser(user);\n\n        return this._prepareEntityToBeAddedAsync(user, entity).then(() => {\n            return this._validateEntityToBeAddedAsync(user, entity);\n        }).then(() => {\n            return this.table.addEntityAsync(entity);\n        }).then((entity) => {\n            return this._entityAddedAsync(user, entity);\n        });\n    }\n\n    asQueryable(user) {\n        this._assertUser(user);\n\n        let provider = this.getQueryProvider(user);\n        let queryable = new Queryable();\n\n        queryable.provider = provider;\n\n        return queryable;\n    }\n\n    getReadStreamByIdAsync(user, id) {\n        return getEntityByIdAsync(user, id).then((entity) => {\n            return this.fileSystem.getReadStreamAsync(this._getFilePathById(id));\n        });\n    }\n\n    getWriteStreamByIdAsync(user, id) {\n        return getEntityByIdAsync(user, id).then((entity) => {\n            return this.fileSystem.getWriteStreamAsync(this._getFilePathById(id));\n        });\n    }\n\n    getEntityByIdAsync(user, id) {\n        let primaryKey = this._getPrimaryKeyName();\n        return this.asQueryable(user).where((expBuilder) => {\n            return expBuilder.property(primaryKey).isEqualTo(id);\n        }).toArrayAsync().then((results) => {\n            return results[0] || null;\n        });\n    }\n\n    getQueryProvider(user) {\n        this._assertUser(user);\n\n        return new MetaProvider(user, this);\n    }\n\n    removeEntityAsync(user, entity) {\n        this._assertUser(user);\n\n        Object.freeze(entity);\n        return this._approveEntityToBeRemovedAsync(user, entity).then(() => {\n            return this.removeFileByIdAsync(user, entity[this._getPrimaryKeyName()]).catch((error) => {\n                return;\n            });\n        }).then(() => {\n            return this.table.removeEntityAsync(entity);\n        }).then(() => {\n            return this._entityRemovedAsync(user, entity);\n        });\n    }\n\n    removeFileByIdAsync(user, id) {\n        return this.getEntityByIdAsync(user, id).then(() => {\n            return this.fileSystem.removeFileAsync(this._getFilePathById(id));\n        });\n    }\n\n    updateEntityAsync(user, entity, delta) {\n        this._assertUser(user);\n\n        Object.freeze(entity);\n        let updatedEntity;\n\n        return this._prepareEntityToBeUpdatedAsync(user, entity, delta).then((delta) => {\n            return this._validateEntityToBeUpdatedAsync(user, entity, delta);\n        }).then((delta) => {\n            return this.table.updateEntityAsync(user, entity, delta).then((entity) => {\n                updatedEntity = entity;\n                return delta;\n            });\n        }).then((delta) => {\n            return this._entityUpdatedAsync(user, updatedEntity, delta);\n        }).then(() => {\n            return updatedEntity;\n        });\n    }\n\n}"]}