{"version":3,"sources":["../../src/query/Expression.js"],"names":["Expression","nodeName","Error","value","string","number","boolean","Array","isArray","array","Date","date","object","expression","Object","leftExpression","rightExpression","children","push","prototype","slice","call","arguments","forEach","arg","valueExpression","constant","name","args","property","propertyAccessExpression","anyExpression","expressionExpression","allExpression","expresssionExpression","propertyName","propertyExpression","Type","namespace","containsExpression","ofTypeExpression","intersectsExpression"],"mappings":"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","file":"Expression.js","sourcesContent":["import OperationExpression from \"./OperationExpression\";\r\nimport ValueExpression from \"./ValueExpression\";\r\n\r\nexport default class Expression {\r\n    constructor() {\r\n        this.nodeName = \"expression\";\r\n    }\r\n\r\n    copy() {\r\n        throw new Error(\"Meant to be overriden\");\r\n    }\r\n\r\n    isEqualTo() {\r\n        throw new Error(\"Meant to be overriden\");\r\n    }\r\n\r\n    static getExpressionType(value) {\r\n        if (value instanceof Expression) {\r\n            return value;\r\n        }\r\n\r\n        if (typeof value === \"string\") {\r\n            return Expression.string(value);\r\n        } else if (typeof value === \"function\") {\r\n            return Expression[\"function\"](value);\r\n        } else if (typeof value === \"number\") {\r\n            return Expression.number(value);\r\n        } else if (typeof value === \"boolean\") {\r\n            return Expression.boolean(value);\r\n        } else if (value === null) {\r\n            return Expression[\"null\"](value);\r\n            return Expression[\"undefined\"](value);\r\n        } else if (Array.isArray(value)) {\r\n            return Expression.array(value);\r\n        } else if (value instanceof Date) {\r\n            return Expression.date(value);\r\n        } else {\r\n            return Expression.object(value);\r\n        }\r\n    }\r\n\r\n    static property(value) {\r\n        return new ValueExpression(\"property\", value);\r\n    }\r\n\r\n    static constant(value) {\r\n        return new ValueExpression(\"constant\", value);\r\n    }\r\n\r\n    static boolean(value) {\r\n        var expression = new ValueExpression(\"boolean\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static string(value) {\r\n        var expression = new ValueExpression(\"string\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static number(value) {\r\n        var expression = new ValueExpression(\"number\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static object(value) {\r\n        var expression = new ValueExpression(\"object\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static date(value) {\r\n        var expression = new ValueExpression(\"date\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static function(value) {\r\n        var expression = new ValueExpression(\"function\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static type(value) {\r\n        var expression = new ValueExpression(\"type\");\r\n        expression.value = value || Object;\r\n        return expression;\r\n    }\r\n\r\n    static null(value) {\r\n        var expression = new ValueExpression(\"null\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static undefined(value) {\r\n        var expression = new ValueExpression(\"undefined\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static array(value) {\r\n        var expression = new ValueExpression(\"array\");\r\n        expression.value = value;\r\n        return expression;\r\n    }\r\n\r\n    static queryable(leftExpression, rightExpression) {\r\n        var expression = new OperationExpression(\"queryable\");\r\n        expression.children.push(leftExpression, rightExpression);\r\n        return expression;\r\n    }\r\n\r\n    //\r\n    // OperationExpression helpers\r\n    //\r\n\r\n    static equalTo() {\r\n        var expression = new OperationExpression(\"equalTo\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static notEqualTo() {\r\n        var expression = new OperationExpression(\"notEqualTo\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static or() {\r\n        var expression = new OperationExpression(\"or\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static and() {\r\n        var expression = new OperationExpression(\"and\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static where() {\r\n        var expression = new OperationExpression(\"where\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static greaterThan() {\r\n        var expression = new OperationExpression(\"greaterThan\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static lessThan() {\r\n        var expression = new OperationExpression(\"lessThan\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static greaterThanOrEqualTo() {\r\n        var expression = new OperationExpression(\"greaterThanOrEqualTo\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static lessThanOrEqualTo() {\r\n        var expression = new OperationExpression(\"lessThanOrEqualTo\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static orderBy() {\r\n        var expression = new OperationExpression(\"orderBy\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static descending() {\r\n        var expression = new OperationExpression(\"descending\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static ascending() {\r\n        var expression = new OperationExpression(\"ascending\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static skip(value) {\r\n        var expression = new OperationExpression(\"skip\");\r\n        var valueExpression = Expression.constant(value);\r\n        expression.children.push(valueExpression);\r\n\r\n        return expression;\r\n    }\r\n\r\n    static take(value) {\r\n        var expression = new OperationExpression(\"take\");\r\n        var valueExpression = Expression.constant(value);\r\n        expression.children.push(valueExpression);\r\n\r\n        return expression;\r\n    }\r\n\r\n    static buildOperatorExpression(name) {\r\n        var expression = new OperationExpression(name);\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        args.forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n\r\n        return expression;\r\n    }\r\n\r\n    static guid() {\r\n        var expression = new OperationExpression(\"guid\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static substring() {\r\n        var expression = new OperationExpression(\"substring\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static substringOf() {\r\n        var expression = new OperationExpression(\"substringOf\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static startsWith() {\r\n        var expression = new OperationExpression(\"startsWith\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static endsWith() {\r\n        var expression = new OperationExpression(\"endsWith\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static isIn(property, array) {\r\n        var expression = new OperationExpression(\"isIn\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static isNotIn(property, array) {\r\n        var expression = new OperationExpression(\"isNotIn\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static include() {\r\n        var expression = new OperationExpression(\"include\");\r\n        Array.prototype.slice.call(arguments, 0).forEach(arg => {\r\n            expression.children.push(arg);\r\n        });\r\n        return expression;\r\n    }\r\n\r\n    static any(propertyAccessExpression, expression) {\r\n        var anyExpression = new OperationExpression(\"any\");\r\n        var expressionExpression = Expression.expression(expression);\r\n\r\n        anyExpression.children.push(propertyAccessExpression, expressionExpression);\r\n        return anyExpression;\r\n    }\r\n\r\n    static all(propertyAccessExpression, expression) {\r\n        var allExpression = new OperationExpression(\"all\");\r\n        var expressionExpression = Expression.expression(expression);\r\n\r\n        allExpression.children.push(propertyAccessExpression, expressionExpression);\r\n        return allExpression;\r\n    }\r\n\r\n    static expression(value) {\r\n        var expresssionExpression = new ValueExpression(\"expression\", value);\r\n\r\n        return expresssionExpression;\r\n    }\r\n\r\n    static propertyAccess(leftExpression, propertyName) {\r\n        var propertyExpression = Expression.property(propertyName);\r\n        var propertyAccessExpression = new OperationExpression(\"propertyAccess\");\r\n        propertyAccessExpression.children.push(leftExpression, propertyExpression);\r\n\r\n        return propertyAccessExpression;\r\n    }\r\n\r\n    static contains(Type, namespace, expression) {\r\n        var containsExpression = new OperationExpression(\"contains\");\r\n        var ofTypeExpression = new ValueExpression(\"ofType\", Type);\r\n        var propertyExpression = new ValueExpression(\"property\", namespace);\r\n\r\n        containsExpression.children.push(ofTypeExpression, propertyExpression, expression);\r\n\r\n        return containsExpression;\r\n    }\r\n\r\n    static intersects(Type, namespace, expression) {\r\n        var intersectsExpression = new OperationExpression(\"intersects\");\r\n        var ofTypeExpression = new ValueExpression(\"ofType\", Type);\r\n        var propertyExpression = new ValueExpression(\"property\", namespace);\r\n\r\n        intersectsExpression.children.push(ofTypeExpression, propertyExpression, expression);\r\n\r\n        return intersectsExpression;\r\n    }\r\n}\r\n"]}