{"version":3,"sources":["../../src/util/LocalFileSystem.js"],"names":["LocalFileSystem","rootFilePath","fileSystem","Error","path","fileStream","createReadStream","Promise","resolve","unlink","createWriteStream","stat","then","size"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,e;AACjB,mCAA0C;AAAA,YAA5BC,YAA4B,QAA5BA,YAA4B;AAAA,YAAdC,UAAc,QAAdA,UAAc;;AAAA;;AAEtC,YAAID,gBAAgB,IAApB,EAA0B;AACtB,kBAAM,IAAIE,KAAJ,CAAU,oEAAV,CAAN;AACH;;AAED,aAAKF,YAAL,GAAoBA,YAApB;AACA,aAAKC,UAAL,GAAkBA,+BAAlB;AACH;;;;2CAEkBE,I,EAAM;AACrB,gBAAIC,aAAaH,WAAWI,gBAAX,CAA4BF,IAA5B,CAAjB;AACA,mBAAOG,QAAQC,OAAR,CAAgBH,UAAhB,CAAP;AACH;;;wCAEeD,I,EAAM;AAClB,mBAAOC,WAAWI,MAAX,CAAkBL,IAAlB,CAAP;AACH;;;4CAEmBA,I,EAAM;AACtB,gBAAIC,aAAaH,WAAWQ,iBAAX,CAA6BN,IAA7B,CAAjB;AACA,mBAAOG,QAAQC,OAAR,CAAgBH,UAAhB,CAAP;AACH;;;yCAEgBD,I,EAAM;AACnB,mBAAOF,WAAWS,IAAX,GAAkBC,IAAlB,CAAuB,UAACD,IAAD,EAAU;AACpC,uBAAOA,KAAKE,IAAZ;AACH,aAFM,CAAP;AAGH;;;;;;kBA7BgBb,e","file":"LocalFileSystem.js","sourcesContent":["import path from \"path\";\nimport defaultFileSystem from \"fs-extra\";\n\nexport default class LocalFileSystem {\n    constructor({ rootFilePath, fileSystem }) {\n\n        if (rootFilePath == null) {\n            throw new Error(\"Null Argument Exception: File System needs to have a rootFilePath.\");\n        }\n\n        this.rootFilePath = rootFilePath;\n        this.fileSystem = fileSystem || defaultFileSystem;\n    }\n\n    getReadStreamAsync(path) {\n        let fileStream = fileSystem.createReadStream(path);\n        return Promise.resolve(fileStream);\n    }\n\n    removeFileAsync(path) {\n        return fileStream.unlink(path);\n    }\n\n    getWriteStreamAsync(path) {\n        let fileStream = fileSystem.createWriteStream(path);\n        return Promise.resolve(fileStream);\n    }\n\n    getFileSizeAsync(path) {\n        return fileSystem.stat().then((stat) => {\n            return stat.size;\n        })\n    }\n\n}"]}