{"version":3,"sources":["../../src/sqlite/Table.js"],"names":["Table","name","options","sqlite","edm","Error","table","_getTable","tableStatementBuilder","provider","column","columns","find","isPrimaryKey","tables","entity","sql","createInsertStatement","run","statement","values","then","_getPrimaryKeyName","lastID","tableStatement","createTableStatement","relationships","indexesStatements","createTableIndexesStatements","unshift","exec","join","createDropTableStatement","createDeleteStatement","delta","createUpdateStatement","Object","assign","queryable"],"mappings":"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","file":"Table.js","sourcesContent":["import TableStatementBuilder from \"./TableStatementBuilder\";\nimport Queryable from \"./../query/Queryable\";\nimport Provider from \"./Provider\";\n\nexport default class Table {\n    constructor(name, options = {}) {\n        this.sqlite = options.sqlite;\n        this.edm = options.edm;\n        this.name = name;\n\n        if (this.name == null) {\n            throw new Error(\"The table needs to have a name.\");\n        }\n\n        if (this.sqlite == null) {\n            throw new Error(\"The table needs to have a sqlite database.\");\n        }\n\n        if (this.edm == null) {\n            throw new Error(\"The table needs to have a edm.\");\n        }\n\n        this.table = this._getTable(name);\n\n        if (this.table == null) {\n            throw new Error(`Cannot find table called '${name}' with-in ${this.edm.name}.`);\n        }\n\n        this.tableStatementBuilder = new TableStatementBuilder(name, options);\n        this.provider = new Provider(name, {\n            edm: this.edm,\n            sqlite: this.sqlite\n        });\n    }\n\n    _getPrimaryKeyName() {\n        var column = this.table.columns.find((column) => {\n            return column.isPrimaryKey;\n        });\n\n        return column && column.name || null;\n    }\n\n    _getTable(name) {\n        return this.edm.tables.find((table) => {\n            return table.name === name;\n        });\n    }\n\n\n    addEntityAsync(entity) {\n        var sql = this.tableStatementBuilder.createInsertStatement(this.table, entity);\n\n        return this.sqlite.run(sql.statement, sql.values).then((statement) => {\n            entity[this._getPrimaryKeyName()] = statement.lastID;\n            return entity;\n        });\n    }\n\n    createAsync() {\n        var tableStatement = this.tableStatementBuilder.createTableStatement(this.table, this.edm.relationships);\n        var indexesStatements = this.tableStatementBuilder.createTableIndexesStatements(this.table, this.edm.relationships);\n\n        indexesStatements.unshift(tableStatement);\n\n        return this.sqlite.exec(indexesStatements.join(\";\"));\n    }\n\n    dropAsync() {\n        var statement = this.tableStatementBuilder.createDropTableStatement(this.table.name);\n\n        return this.sqlite.run(statement);\n    }\n\n    removeEntityAsync(entity) {\n        var sql = this.tableStatementBuilder.createDeleteStatement(this.table, entity);\n\n        return this.sqlite.run(sql.statement, sql.values).then(()=>{\n            return entity;\n        });\n    }\n\n    updateEntityAsync(entity, delta) {\n        var sql = this.tableStatementBuilder.createUpdateStatement(this.table, entity, delta);\n\n        return this.sqlite.run(sql.statement, sql.values).then(()=>{\n            return Object.assign(entity, delta);\n        });\n    }\n\n    asQueryable() {\n        let queryable = new Queryable(this.name);\n        queryable.provider = this.provider;\n\n        return queryable;\n    }\n\n    getQueryProvider() {\n        return this.provider;\n    }\n\n}"]}