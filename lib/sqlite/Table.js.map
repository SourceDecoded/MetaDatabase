{"version":3,"sources":["../../src/sqlite/Table.js"],"names":["Table","name","options","sqlite","edm","Error","table","_getTable","statementBuilder","tables","find","entity","delta"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,K;AACjB,mBAAYC,IAAZ,EAAgC;AAAA,YAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAC5B,aAAKC,MAAL,GAAcD,QAAQC,MAAtB;AACA,aAAKC,GAAL,GAAWF,QAAQE,GAAnB;AACA,aAAKH,IAAL,GAAYA,IAAZ;;AAEA,YAAI,KAAKA,IAAL,IAAa,IAAjB,EAAuB;AACnB,kBAAM,IAAII,KAAJ,CAAU,iCAAV,CAAN;AACH;;AAED,YAAI,KAAKF,MAAL,IAAe,IAAnB,EAAyB;AACrB,kBAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AACH;;AAED,YAAI,KAAKD,GAAL,IAAY,IAAhB,EAAsB;AAClB,kBAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAED,aAAKC,KAAL,GAAa,KAAKC,SAAL,CAAeN,IAAf,CAAb;AACA,aAAKO,gBAAL,GAAwB,+BAAqBP,IAArB,EAA2BC,OAA3B,CAAxB;AAEH;;;;kCAESD,I,EAAM;AACZ,mBAAO,KAAKG,GAAL,CAASK,MAAT,CAAgBC,IAAhB,CAAqB,UAACJ,KAAD,EAAW;AACnC,uBAAOA,MAAML,IAAN,KAAeA,IAAtB;AACH,aAFM,CAAP;AAGH;;;uCAGcU,M,EAAQ,CAEtB;;;2CAEkB,CAElB;;;0CAEiBA,M,EAAQ,CAEzB;;;0CAEiBA,M,EAAQC,K,EAAO,CAEhC;;;;;;kBA5CgBZ,K","file":"Table.js","sourcesContent":["import StatementBuilder from \"./StatementBuilder\";\n\nexport default class Table {\n    constructor(name, options = {}) {\n        this.sqlite = options.sqlite;\n        this.edm = options.edm;\n        this.name = name;\n\n        if (this.name == null) {\n            throw new Error(\"The table needs to have a name.\");\n        }\n\n        if (this.sqlite == null) {\n            throw new Error(\"The table needs to have a sqlite database.\");\n        }\n\n        if (this.edm == null) {\n            throw new Error(\"The table needs to have a edm.\");\n        }\n\n        this.table = this._getTable(name);\n        this.statementBuilder = new StatementBuilder(name, options);\n\n    }\n\n    _getTable(name) {\n        return this.edm.tables.find((table) => {\n            return table.name === name;\n        });\n    }\n\n\n    addEntityAsync(entity) {\n\n    }\n\n    createTableAsync() {\n\n    }\n\n    removeEntityAsync(entity) {\n\n    }\n\n    updateEntityAsync(entity, delta) {\n\n    }\n\n}"]}