{"version":3,"sources":["../../src/glassDoor/GlassExpressRouter.js"],"names":["mainApp","pane","enabled","attach","apiRoot","handler","Router","use","req","res","next","status","send","json","user","param","model","table","metaDatabase","getTable","version","id","intId","parseInt","getEntityByIdAsync","then","result","entity","catch","e","name","handleAdd","addEntityAsync","handleQuery","query","asQueryable","where","toArrayAsync","get","q","fileType","set","getFileWriteStreamByIdAsync","params","stream","post","body","updateEntityAsync","busboy","on","fieldname","file","filename","encoding","mimetype","data","write","end","delete","removeEntityAsync","removeFileByIdAsync","edm"],"mappings":"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","file":"GlassExpressRouter.js","sourcesContent":["import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport busboy from \"connect-busboy\";\n\nexport default class {\n    constructor(mainApp, pane){\n        this.enabled = true;\n        this.pane = pane;\n        attach(apiRoot);\n    }\n\n    // NOTE: sub-apps and routers can not be removed from an Express app stack,\n    // so we wrap the router and use some middleware to short-circuit\n    // requests to things we wish we could remove.\n    dispose() {\n        this.enabled = false;\n    }\n\n    attach(apiRoot) {\n        let handler = express.Router();\n        handler.use((req, res, next) => {\n            if (this.enabled) {\n                next();\n            } else {\n                res.status(500).send(\"This API is no longer valid\");\n            }\n        });\n        handler.use(bodyParser.json());\n        handler.use(busboy());\n\n        handler.use((req, res, next) => {\n            // add the user to req\n            // TODO: actually add the user to req\n            req.user = {};\n            next();\n        });\n\n        handler.param(\"model\", (req, res, next, model) => {\n            let table = this.pane.metaDatabase.getTable(model);\n            if (table) {\n                req.table = table;\n                next();\n            } else {\n                res.status(500).send(`Unknown model: ${model}`);\n            }\n        });\n\n        handler.param(\"version\", (req, res, next, version) => {\n            // verify version is valid for given model\n            // else throw\n            next();\n        });\n\n        handler.param(\"id\", (req, res, next, id) => {\n            let intId = parseInt(id, 10);\n\n            req.table.getEntityByIdAsync(user, id).then((result) => {\n                req.entity = result;\n                next();\n            }).catch((e) => {\n                res.status(404).send(`Could not find id:${id} on ${table.name}`);                \n            });\n        });\n\n        let handleAdd = function(entity, req, res, next) {\n            req.table.addEntityAsync(entity).then((result) => {\n                res.status(201).send(result);\n            }).catch((e) => {\n                res.status(500).send(e);\n            });\n        }\n\n        let handleQuery = function(query, req, res, next) {\n            req.table.asQueryable(req.user).where(/* do something with the query here */).toArrayAsync().then((result) => {\n                res.send(result);\n            }).catch((e) => {\n                res.status(500).send(e);\n            });\n        }\n\n        // GET by ID\n        handler.get(\"/:model/:version/:id\", (req, res, next) => {\n            res.send(req.entity);\n        });\n        \n        // GET query\n        handler.get(\"/:model/:version\", (req, res, next) => {\n            handleQuery(req.query.q, req, res, next);\n        });\n\n        // GET file\n        // TODO: what about MIME types and whatnot?\n        handler.get(\"/:model/:version/:id/file\", (req, res, next) => {\n            // by convention, we can have a \"fileType\" property on any\n            // entity that wants to make such known to a client.\n            if (req.entity.fileType) {\n                res.set(req.entity.fileType);\n            }            \n            req.table.getFileWriteStreamByIdAsync(req.user, req.params.id).then((stream) => {\n                res.send(stream);\n            }).catch((e) => {\n                res.status(500).send(e);\n            });\n        });\n\n        // POST new or query\n        handler.post(\"/:model/:version\", (req, res, next) => {\n            // cleverness award\n            // TODO: too clever?\n            (req.get(\"X-Query\") ? handleQuery : handleAdd)(req.body, req, res, next);\n        });\n\n        // POST update\n        handler.post(\":/model/:version/:id\", (req, res, next) => {\n            req.table.updateEntityAsync(req.user, req.entity, req.body).then((result) => {\n                res.send(result);\n            }).catch((e) => {\n                res.status(500).send(e);\n            });\n        });\n\n        // POST file\n        handler.post(\":/model/:version/:id/file\", (req, res, next) => {\n            if (!req.busboy) {\n                res.status(500).send(\"No file found\");\n            }\n            req.table.getFileWriteStreamByIdAsync(req.user, req.params.id).then((stream) => {\n                req.busboy.on('file', (fieldname, file, filename, encoding, mimetype) => {\n                    file.on('data', (data) => {\n                        stream.write(data);\n                    });\n                    file.on('end', () => {\n                        stream.end();\n                        res.status(200).end();\n                    });\n                });\n            }).catch((e) => {\n                res.status(500).send(e);\n            });\n        });\n\n        // DELETE entity\n        handler.delete(\":/model/:version/:id\", (req, res, next) => {\n            req.table.removeEntityAsync(req.user, req.entity).then((result) => {\n                res.status(200).end();\n            }).catch((e) => {\n                res.status(500).send(e);\n            });\n        });\n\n        // DELETE file\n        handler.delete(\":/model/:version/:id/file\", (req, res, next) => {\n            req.table.removeFileByIdAsync(req.user, req.params.id).then((result) => {\n                res.status(200).end();\n            }).catch((e) => {\n                res.status(500).send(e);\n            });\n        });\n\n        this.mainApp.use(apiRoot + \"/\" + this.pane.edm.name, handler);\n    }\n\n\n}"]}