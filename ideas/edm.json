/*
this.dataTypeMapping = {
            "String": "TEXT",
            "Number": "NUMERIC",
            "Boolean": "NUMERIC",
            "Float": "REAL",
            "Decimal": "REAL",
            "Double": "REAL",
            "Integer": "INTEGER",
            "Date": "NUMERIC",
            "Enum": "NUMERIC"
        };
*/
{
    "name": "Leavitt Home",
    "version": "0.0.1", // Defaults to 0.0.1
    "tables": [
        {
            "name": "Source",
            "label": "Source",
            "pluralLabel": "Sources",
            "decorators": [
                "Authorizable",
                "Governance",
                "Expirable",
                "Auditable"
            ],
            "columns": [
                {
                    "type": "Integer", // Possible types: String, Integer, Date, Binary
                    "name": "id",
                    "label": "Identifier",
                    "isPrimaryKey": true, // Defaults to false
                    "isAutoIncrement": true, // Default to false
                    "isNullable": true // Default to true
                },
                {
                    "type": "String",
                    "name": "string",
                    "label": "String",
                    "defaultStringValue": "This is a string."
                },
                {
                    "type": "Integer",
                    "name": "integer",
                    "label": "Integer",
                    "defaultIntegerValue": 1
                },
                {
                    "type": "Float",
                    "name": "float",
                    "label": "Float",
                    "defaultFloatValue": 0.10
                },
                {
                    "type": "Boolean",
                    "name": "boolean",
                    "label": "Boolean",
                    "defaultBooleanValue": 0.10
                }
            ]
        }
    ],
    "relationships": {
        "oneToOne": [
            {
                "type": "Post",
                "hasKey": "id",
                "hasOne": "createdBy",
                "hasOneLabel": "Created By",
                "ofType": "Person",
                "withKey": "id",
                "withForeignKey": "postId",
                "withOne": "post",
                "withOneLabel": "Post"
            }
        ],
        "oneToMany": [
            {
                "type": "Post",
                "hasKey": "id",
                "hasMany": "comments",
                "hasManyLabel": "Comments",
                "ofType": "Comment",
                "withKey": "id",
                "withForeignKey": "postId",
                "withOne": "post",
                "withOneLabel": "Post"
            }
        ]
    }
}